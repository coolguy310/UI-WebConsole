/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * OpenAPI spec version: 
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UiNodeAnchorAttributes } from '../models/UiNodeAnchorAttributes.ts';
import { UiNodeImageAttributes } from '../models/UiNodeImageAttributes.ts';
import { UiNodeInputAttributes } from '../models/UiNodeInputAttributes.ts';
import { UiNodeScriptAttributes } from '../models/UiNodeScriptAttributes.ts';
import { UiNodeTextAttributes } from '../models/UiNodeTextAttributes.ts';
import { UiText } from '../models/UiText.ts';
import { HttpFile } from '../http/http.ts';

export class UiNodeAttributes {
    /**
    * The autocomplete attribute for the input. email InputAttributeAutocompleteEmail tel InputAttributeAutocompleteTel url InputAttributeAutocompleteUrl current-password InputAttributeAutocompleteCurrentPassword new-password InputAttributeAutocompleteNewPassword one-time-code InputAttributeAutocompleteOneTimeCode
    */
    'autocomplete'?: UiNodeAttributesAutocompleteEnum;
    /**
    * Sets the input\'s disabled field to true or false.
    */
    'disabled': boolean;
    'label'?: UiText;
    /**
    * The input\'s element name.
    */
    'name': string;
    /**
    * NodeType represents this node\'s types. It is a mirror of `node.type` and is primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is \"script\".
    */
    'node_type': string;
    /**
    * OnClick may contain javascript which should be executed on click. This is primarily used for WebAuthn.
    */
    'onclick'?: string;
    /**
    * The input\'s pattern.
    */
    'pattern'?: string;
    /**
    * Mark this input field as required.
    */
    'required'?: boolean;
    /**
    * The script MIME type
    */
    'type': string;
    /**
    * The input\'s value.
    */
    'value'?: any | null;
    /**
    * A unique identifier
    */
    'id': string;
    'text': UiText;
    /**
    * Height of the image
    */
    'height': number;
    /**
    * The script source
    */
    'src': string;
    /**
    * Width of the image
    */
    'width': number;
    /**
    * The link\'s href (destination) URL.  format: uri
    */
    'href': string;
    'title': UiText;
    /**
    * The script async type
    */
    'async': boolean;
    /**
    * The script cross origin policy
    */
    'crossorigin': string;
    /**
    * The script\'s integrity hash
    */
    'integrity': string;
    /**
    * Nonce for CSP  A nonce you may want to use to improve your Content Security Policy. You do not have to use this value but if you want to improve your CSP policies you may use it. You can also choose to use your own nonce value!
    */
    'nonce': string;
    /**
    * The script referrer policy
    */
    'referrerpolicy': string;

    static readonly discriminator: string | undefined = "node_type";

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "autocomplete",
            "baseName": "autocomplete",
            "type": "UiNodeAttributesAutocompleteEnum",
            "format": ""
        },
        {
            "name": "disabled",
            "baseName": "disabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "UiText",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "node_type",
            "baseName": "node_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "onclick",
            "baseName": "onclick",
            "type": "string",
            "format": ""
        },
        {
            "name": "pattern",
            "baseName": "pattern",
            "type": "string",
            "format": ""
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "any",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "UiText",
            "format": ""
        },
        {
            "name": "height",
            "baseName": "height",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "src",
            "baseName": "src",
            "type": "string",
            "format": ""
        },
        {
            "name": "width",
            "baseName": "width",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "href",
            "baseName": "href",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "UiText",
            "format": ""
        },
        {
            "name": "async",
            "baseName": "async",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "crossorigin",
            "baseName": "crossorigin",
            "type": "string",
            "format": ""
        },
        {
            "name": "integrity",
            "baseName": "integrity",
            "type": "string",
            "format": ""
        },
        {
            "name": "nonce",
            "baseName": "nonce",
            "type": "string",
            "format": ""
        },
        {
            "name": "referrerpolicy",
            "baseName": "referrerpolicy",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UiNodeAttributes.attributeTypeMap;
    }

    public constructor() {
        this.node_type = "UiNodeAttributes";
    }
}


export type UiNodeAttributesAutocompleteEnum = "email" | "tel" | "url" | "current-password" | "new-password" | "one-time-code" ;

