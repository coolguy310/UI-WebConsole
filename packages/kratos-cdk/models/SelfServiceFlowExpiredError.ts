/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * OpenAPI spec version: 
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GenericError } from '../models/GenericError.ts';
import { HttpFile } from '../http/http.ts';

/**
* Is sent when a flow is expired
*/
export class SelfServiceFlowExpiredError {
    'error'?: GenericError;
    /**
    * When the flow has expired
    */
    'expired_at'?: Date;
    /**
    * A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
    */
    'since'?: number;
    /**
    * The flow ID that should be used for the new flow as it contains the correct messages.
    */
    'use_flow_id'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "error",
            "baseName": "error",
            "type": "GenericError",
            "format": ""
        },
        {
            "name": "expired_at",
            "baseName": "expired_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "since",
            "baseName": "since",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "use_flow_id",
            "baseName": "use_flow_id",
            "type": "string",
            "format": "uuid"
        }    ];

    static getAttributeTypeMap() {
        return SelfServiceFlowExpiredError.attributeTypeMap;
    }

    public constructor() {
    }
}

