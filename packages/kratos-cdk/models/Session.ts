/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * OpenAPI spec version: 
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AuthenticatorAssuranceLevel } from '../models/AuthenticatorAssuranceLevel.ts';
import { Identity } from '../models/Identity.ts';
import { SessionAuthenticationMethod } from '../models/SessionAuthenticationMethod.ts';
import { SessionDevice } from '../models/SessionDevice.ts';
import { HttpFile } from '../http/http.ts';

/**
* A Session
*/
export class Session {
    /**
    * Active state. If false the session is no longer active.
    */
    'active'?: boolean;
    /**
    * The Session Authentication Timestamp  When this session was authenticated at. If multi-factor authentication was used this is the time when the last factor was authenticated (e.g. the TOTP code challenge was completed).
    */
    'authenticated_at'?: Date;
    /**
    * A list of authenticators which were used to authenticate the session.
    */
    'authentication_methods'?: Array<SessionAuthenticationMethod>;
    'authenticator_assurance_level'?: AuthenticatorAssuranceLevel;
    /**
    * Devices has history of all endpoints where the session was used
    */
    'devices'?: Array<SessionDevice>;
    /**
    * The Session Expiry  When this session expires at.
    */
    'expires_at'?: Date;
    /**
    * Session ID
    */
    'id': string;
    'identity': Identity;
    /**
    * The Session Issuance Timestamp  When this session was issued at. Usually equal or close to `authenticated_at`.
    */
    'issued_at'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "authenticated_at",
            "baseName": "authenticated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "authentication_methods",
            "baseName": "authentication_methods",
            "type": "Array<SessionAuthenticationMethod>",
            "format": ""
        },
        {
            "name": "authenticator_assurance_level",
            "baseName": "authenticator_assurance_level",
            "type": "AuthenticatorAssuranceLevel",
            "format": ""
        },
        {
            "name": "devices",
            "baseName": "devices",
            "type": "Array<SessionDevice>",
            "format": ""
        },
        {
            "name": "expires_at",
            "baseName": "expires_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "identity",
            "baseName": "identity",
            "type": "Identity",
            "format": ""
        },
        {
            "name": "issued_at",
            "baseName": "issued_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return Session.attributeTypeMap;
    }

    public constructor() {
    }
}



