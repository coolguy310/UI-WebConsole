/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * OpenAPI spec version: 
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ContinueWith } from '../models/ContinueWith.ts';
import { Identity } from '../models/Identity.ts';
import { Session } from '../models/Session.ts';
import { HttpFile } from '../http/http.ts';

/**
* The Response for Registration Flows via API
*/
export class SuccessfulNativeRegistration {
    /**
    * Contains a list of actions, that could follow this flow  It can, for example, this will contain a reference to the verification flow, created as part of the user\'s registration or the token of the session.
    */
    'continue_with'?: Array<ContinueWith>;
    'identity': Identity;
    'session'?: Session;
    /**
    * The Session Token  This field is only set when the session hook is configured as a post-registration hook.  A session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization Header:  Authorization: bearer ${session-token}  The session token is only issued for API flows, not for Browser flows!
    */
    'session_token'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "continue_with",
            "baseName": "continue_with",
            "type": "Array<ContinueWith>",
            "format": ""
        },
        {
            "name": "identity",
            "baseName": "identity",
            "type": "Identity",
            "format": ""
        },
        {
            "name": "session",
            "baseName": "session",
            "type": "Session",
            "format": ""
        },
        {
            "name": "session_token",
            "baseName": "session_token",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SuccessfulNativeRegistration.attributeTypeMap;
    }

    public constructor() {
    }
}

