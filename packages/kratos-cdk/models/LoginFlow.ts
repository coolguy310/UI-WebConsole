/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * OpenAPI spec version: 
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AuthenticatorAssuranceLevel } from '../models/AuthenticatorAssuranceLevel.ts';
import { IdentityCredentialsType } from '../models/IdentityCredentialsType.ts';
import { OAuth2LoginRequest } from '../models/OAuth2LoginRequest.ts';
import { UiContainer } from '../models/UiContainer.ts';
import { HttpFile } from '../http/http.ts';

/**
* This object represents a login flow. A login flow is initiated at the \"Initiate Login API / Browser Flow\" endpoint by a client.  Once a login flow is completed successfully, a session cookie or session token will be issued.
*/
export class LoginFlow {
    'active'?: IdentityCredentialsType;
    /**
    * CreatedAt is a helper struct field for gobuffalo.pop.
    */
    'created_at'?: Date;
    /**
    * ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in, a new flow has to be initiated.
    */
    'expires_at': Date;
    /**
    * ID represents the flow\'s unique ID. When performing the login flow, this represents the id in the login UI\'s query parameter: http://<selfservice.flows.login.ui_url>/?flow=<flow_id>
    */
    'id': string;
    /**
    * IssuedAt is the time (UTC) when the flow started.
    */
    'issued_at': Date;
    /**
    * Ory OAuth 2.0 Login Challenge.  This value is set using the `login_challenge` query parameter of the registration and login endpoints. If set will cooperate with Ory OAuth2 and OpenID to act as an OAuth2 server / OpenID Provider.
    */
    'oauth2_login_challenge'?: string;
    'oauth2_login_request'?: OAuth2LoginRequest;
    /**
    * Refresh stores whether this login flow should enforce re-authentication.
    */
    'refresh'?: boolean;
    /**
    * RequestURL is the initial URL that was requested from Ory Kratos. It can be used to forward information contained in the URL\'s path or query for example.
    */
    'request_url': string;
    'requested_aal'?: AuthenticatorAssuranceLevel;
    /**
    * ReturnTo contains the requested return_to URL.
    */
    'return_to'?: string;
    /**
    * SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the login flow has been completed. This is only set if the client has requested a session token exchange code, and if the flow is of type \"api\", and only on creating the login flow.
    */
    'session_token_exchange_code'?: string;
    /**
    * The flow type can either be `api` or `browser`.
    */
    'type': string;
    'ui': UiContainer;
    /**
    * UpdatedAt is a helper struct field for gobuffalo.pop.
    */
    'updated_at'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "IdentityCredentialsType",
            "format": ""
        },
        {
            "name": "created_at",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expires_at",
            "baseName": "expires_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "issued_at",
            "baseName": "issued_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "oauth2_login_challenge",
            "baseName": "oauth2_login_challenge",
            "type": "string",
            "format": ""
        },
        {
            "name": "oauth2_login_request",
            "baseName": "oauth2_login_request",
            "type": "OAuth2LoginRequest",
            "format": ""
        },
        {
            "name": "refresh",
            "baseName": "refresh",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "request_url",
            "baseName": "request_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "requested_aal",
            "baseName": "requested_aal",
            "type": "AuthenticatorAssuranceLevel",
            "format": ""
        },
        {
            "name": "return_to",
            "baseName": "return_to",
            "type": "string",
            "format": ""
        },
        {
            "name": "session_token_exchange_code",
            "baseName": "session_token_exchange_code",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "ui",
            "baseName": "ui",
            "type": "UiContainer",
            "format": ""
        },
        {
            "name": "updated_at",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return LoginFlow.attributeTypeMap;
    }

    public constructor() {
    }
}



