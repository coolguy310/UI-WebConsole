name: qernal-ui-build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  lint:
    name: Lint codebase
    runs-on: ubuntu-22.04
    steps:

      # only lint ui-webconsole code, not externally generated pakcages
      - uses: actions/checkout@v3
        # with:
        #   token: "${{ secrets.GH_PAT }}"
        #   submodules: 'true'

      - name: Lint filenames
        uses: julie-ng/lowercase-linter@v1
        id: lint_filenames
        continue-on-error: true
        with:
          path: '.'
          pr-comment: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # TODO: add linting step

  # Build the ui
  build:
    name: Build UI
    runs-on: ubuntu-22.04
    steps:

      - uses: actions/checkout@v3
        with:
          token: "${{ secrets.GH_PAT }}"
          submodules: 'true'

      - name: Get commit details
        run: |
          export branch_name=${GITHUB_REF##*/}
          echo "branch_name=${branch_name}" >> $GITHUB_ENV
          echo "branch_name_upper=${branch_name^^}" >> $GITHUB_ENV
          echo "branch_name_lower=${branch_name,,}" >> $GITHUB_ENV
          echo "commit_sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Build container
        shell: bash
        run: |
          docker build -t ghcr.io/qernal/ui/webconsole:${{ env.branch_name_lower }}-x86-64 -f ./build/Dockerfile ./ --progress=plain

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push builds
        shell: bash
        run: |
          # push builds
          docker push ghcr.io/qernal/ui/webconsole:${{ env.branch_name_lower }}-x86-64

# add a cleanup task to;
# - remove images that belong to branches that no longer exist